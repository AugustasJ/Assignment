// <auto-generated />
using System;
using HomeAssignmentLibrary.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeAssignmentLibrary.API.Migrations
{
    [DbContext(typeof(HomeAssignmentLibraryContext))]
    [Migration("20210117200121_AddColumn-Agreement[NewBaseRateCode]")]
    partial class AddColumnAgreementNewBaseRateCode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeAssignmentLibrary.API.Entities.Agreement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgreementDuration")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BaseRateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Margin")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("NewBaseRateCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Agreements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            AgreementDuration = 60,
                            Amount = 12000,
                            BaseRateCode = "VILIBOR3m",
                            CustomerId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Margin = 1.6m
                        },
                        new
                        {
                            Id = new Guid("d8663e5e-7494-4f81-8739-6e0de1bea7ee"),
                            AgreementDuration = 36,
                            Amount = 8000,
                            BaseRateCode = "VILIBOR1y",
                            CustomerId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Margin = 2.2m
                        },
                        new
                        {
                            Id = new Guid("d173e20d-159e-4127-9ce9-b0ac2564ad97"),
                            AgreementDuration = 24,
                            Amount = 1000,
                            BaseRateCode = "VILIBOR6m",
                            CustomerId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Margin = 1.85m
                        });
                });

            modelBuilder.Entity("HomeAssignmentLibrary.API.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            FirstName = "Goras",
                            LastName = "Trusevičius",
                            PersonalId = "67812203006"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            FirstName = "Dange",
                            LastName = "Kulkavičiutė",
                            PersonalId = "78706151287"
                        });
                });

            modelBuilder.Entity("HomeAssignmentLibrary.API.Entities.Agreement", b =>
                {
                    b.HasOne("HomeAssignmentLibrary.API.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
